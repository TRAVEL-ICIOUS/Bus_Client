//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bus_Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Insert_BusInfo", Namespace="http://schemas.datacontract.org/2004/07/Bus_Service.Classes")]
    [System.SerializableAttribute()]
    public partial class Insert_BusInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusOrgCapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusID {
            get {
                return this.BusIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BusIDField, value) != true)) {
                    this.BusIDField = value;
                    this.RaisePropertyChanged("BusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusName {
            get {
                return this.BusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BusNameField, value) != true)) {
                    this.BusNameField = value;
                    this.RaisePropertyChanged("BusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusOrgCapacity {
            get {
                return this.BusOrgCapacityField;
            }
            set {
                if ((this.BusOrgCapacityField.Equals(value) != true)) {
                    this.BusOrgCapacityField = value;
                    this.RaisePropertyChanged("BusOrgCapacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusType {
            get {
                return this.BusTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BusTypeField, value) != true)) {
                    this.BusTypeField = value;
                    this.RaisePropertyChanged("BusType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Insert_RouteInfo", Namespace="http://schemas.datacontract.org/2004/07/Bus_Service.Classes")]
    [System.SerializableAttribute()]
    public partial class Insert_RouteInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RouteCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RouteFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RouteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RouteToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RouteCost {
            get {
                return this.RouteCostField;
            }
            set {
                if ((this.RouteCostField.Equals(value) != true)) {
                    this.RouteCostField = value;
                    this.RaisePropertyChanged("RouteCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RouteFrom {
            get {
                return this.RouteFromField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteFromField, value) != true)) {
                    this.RouteFromField = value;
                    this.RaisePropertyChanged("RouteFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RouteID {
            get {
                return this.RouteIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteIDField, value) != true)) {
                    this.RouteIDField = value;
                    this.RaisePropertyChanged("RouteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RouteTo {
            get {
                return this.RouteToField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteToField, value) != true)) {
                    this.RouteToField = value;
                    this.RaisePropertyChanged("RouteTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertBusInfo", ReplyAction="http://tempuri.org/IService1/InsertBusInfoResponse")]
        string InsertBusInfo(Bus_Client.ServiceReference1.Insert_BusInfo B);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertBusInfo", ReplyAction="http://tempuri.org/IService1/InsertBusInfoResponse")]
        System.Threading.Tasks.Task<string> InsertBusInfoAsync(Bus_Client.ServiceReference1.Insert_BusInfo B);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertRouteInfo", ReplyAction="http://tempuri.org/IService1/InsertRouteInfoResponse")]
        string InsertRouteInfo(Bus_Client.ServiceReference1.Insert_RouteInfo R);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertRouteInfo", ReplyAction="http://tempuri.org/IService1/InsertRouteInfoResponse")]
        System.Threading.Tasks.Task<string> InsertRouteInfoAsync(Bus_Client.ServiceReference1.Insert_RouteInfo R);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Bus_Client.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Bus_Client.ServiceReference1.IService1>, Bus_Client.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertBusInfo(Bus_Client.ServiceReference1.Insert_BusInfo B) {
            return base.Channel.InsertBusInfo(B);
        }
        
        public System.Threading.Tasks.Task<string> InsertBusInfoAsync(Bus_Client.ServiceReference1.Insert_BusInfo B) {
            return base.Channel.InsertBusInfoAsync(B);
        }
        
        public string InsertRouteInfo(Bus_Client.ServiceReference1.Insert_RouteInfo R) {
            return base.Channel.InsertRouteInfo(R);
        }
        
        public System.Threading.Tasks.Task<string> InsertRouteInfoAsync(Bus_Client.ServiceReference1.Insert_RouteInfo R) {
            return base.Channel.InsertRouteInfoAsync(R);
        }
    }
}
